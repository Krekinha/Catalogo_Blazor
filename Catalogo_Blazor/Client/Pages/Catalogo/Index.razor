@page "/catalogo"
@page "/catalogo/{categoriaId:int}"
@inject HttpClient http

<div class="form-group">
    <select @onchange="categoriaSelectionChanged" class="form-control">
        @if (categorias != null)
        {
            foreach (var categoria in categorias)
            {
                <option value="@categoria.CategoriaId" 
                        selected="@(categoria.CategoriaId == categoriaId ? true : false)">
                    @categoria.Nome
                </option>
            }
        }
    </select>
</div>
@if (produtos == null)
{
    <p><em>Carregando...</em></p>
}
else if (produtos.Count == 0)
{
    <p><em>Não existem produtos cadastradas...</em></p>
}
else
{
    <div class="row">
        @foreach (var produto in produtos)
        {
            <div class="col-sm-3 col-lg-3 col-md-3">
                <div class="card">
                    <img class="img-rounded" src="data:image/jpge;base64,@produto.ImagemUrl"
                         alt="@produto.Nome" width="180" height="180">
                    <div class="card-body">
                        <h4 class="card-title">@produto.Nome</h4>
                        <h4 class="pull-right">@produto.Preco</h4>
                        <p class="card-text">@produto.Descricao</p>
                        <a href="produto/detalhe/@produto.ProdutoId">Detalhes</a>
                    </div>
                </div>
            </div>
        }
    </div>

}

@code {

    [Parameter]
    public int categoriaId { get; set; }

    List<Produto> produtos { get; set; }
    List<Categoria> categorias { get; set; }
    private int codigoCategoria;

    protected async override Task OnParametersSetAsync()
    {
        categorias = await http.GetFromJsonAsync<List<Categoria>>("api/categorias/todas");
        if (categoriaId == 0)
        {
            codigoCategoria = categorias[0].CategoriaId;
        }
        else
        {
            codigoCategoria = categoriaId;
        }

        await carregaProdutos();
    }

    private async Task carregaProdutos()
    {
        produtos = await http.GetFromJsonAsync<List<Produto>>($"api/produtos/categorias/{codigoCategoria}");
        StateHasChanged();
    }

    private async void categoriaSelectionChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            codigoCategoria = id;
            await carregaProdutos();
        }
    }
}
