@page "/categorias"
@inject HttpClient http

<h2>Categorias</h2>

@if (categorias == null)
{
    <p><em>Carregando...</em></p>
}
else if (categorias.Length == 0)
{
    <p><em>Não existem categorias cadastradas...</em></p>
}
else
{
    //exibe categorias
    <table class="table">
        <thead>
            <tr>
                <th>Categoria</th>
                <th>Descrição</th>
                <th>Editar</th>
                <th>Excluir</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in categorias)
            {
            <tr>
                <td>@item.Nome</td>
                <td>@item.Descricao</td>
                <td>
                    <a class="btn btn-primary" href="categorias/edit/@item.CategoriaId">Editar</a>
                </td>
                <td>
                    <a class="btn btn-danger" @onclick="@(()=> excluirCategoria(item.CategoriaId))">Deletar</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

<div>
    <a class="btn btn-success" href="categorias/create">Criar Categoria</a>
</div>

<Confirma @ref="confirmacao"
          onCancela="CancelaConfirmacao"
          onConfirma="RemoveConfirmacao">

    <div>Deseja excluir esse item?</div>
</Confirma>


@code {
    Categoria[] categorias { get; set; }

    //instancia do componente Confirm
    Confirma confirmacao;
    int catId;

    protected override async Task OnInitializedAsync()
    {
        await carregaCategorias();
    }

    async Task carregaCategorias()
    {
        categorias = await http.GetFromJsonAsync<Categoria[]>("api/Categorias");
        //categorias = new Categoria[]
        //{
        //    new Categoria()
        //    {
        //        CategoriaId = 1,
        //        Nome = "Eletrônicos",
        //        Descricao = "Produtos Eletrônicos"

        //    },
        //    new Categoria()
        //    {
        //        CategoriaId = 2,
        //        Nome = "Smartphones",
        //        Descricao = "Dispositivos Smartphones"

        //    }
        //};
    }

    void excluirCategoria(int categoriaId)
    {
        confirmacao.Exibir();
        catId = categoriaId;

    }

    async void RemoveConfirmacao()
    {
        await http.DeleteAsync($"api/Categorias/{catId}");
        confirmacao.Ocultar();
        await carregaCategorias();
        this.StateHasChanged();
    }

    void CancelaConfirmacao()
    {
        confirmacao.Ocultar();
    }
}
